version: 2.1

orbs:
  android: circleci/android@2.3.0

executors:
  android-executor:
    parameters:
      resource_class:
        type: string
        default: large
    docker:
      - image: cimg/android:2023.11
    resource_class: << parameters.resource_class >>
  working_directory: /tmp

jobs:
  unit-test:
    executor: android-executor
    steps:
      - checkout
      - android/restore-gradle-cache
      - android/restore-build-cache
      - run:
          name: Export Google Services Json
          command: echo 'export GOOGLE_SERVICES_JSON="$GOOGLE_SERVICES_JSON"' >> $BASH_ENV
      - run:
          name: Decode Google Services Json
          command: echo $GOOGLE_SERVICES_JSON | base64 -d > app/google-services.json
      - android/run-tests:
          test-command: ./gradlew testDebug
      - android/save-gradle-cache
      - android/save-build-cache
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit

  android-test:
    parameters:
      system-image:
        type: string
        default: system-images;android-30;google_apis;x86
    executor: android-executor
    steps:
      - checkout
      - run:
            name: Export Google Services Json
            command: echo 'export GOOGLE_SERVICES_JSON="$GOOGLE_SERVICES_JSON"' >> $BASH_ENV
      - run:
            name: Decode Google Services Json
            command: echo $GOOGLE_SERVICES_JSON | base64 -d > app/google-services.json
      - android/start-emulator-and-run-tests:
          test-command: ./gradlew connectedDebugAndroidTest
          system-image: << parameters.system-image >>
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/outputs/androidTest-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit

  release-build:
    executor: android-executor
    steps:
      - checkout
      - android/restore-gradle-cache
      - android/restore-build-cache
      - run:
          name: Export Google Services Json
          command: echo 'export GOOGLE_SERVICES_JSON="$GOOGLE_SERVICES_JSON"' >> $BASH_ENV
      - run:
          name: Decode Google Services Json
          command: echo $GOOGLE_SERVICES_JSON | base64 -d > app/google-services.json
      - run:
          name: Assemble release build
          command: |
            ./gradlew assembleRelease
      - store_artifacts:
          path: app/build/outputs/apk/release/app-release-unsigned.apk

workflows:
  test-and-build:
    jobs:
      - unit-test
      - android-test:
          matrix:
            alias: android-test-all
            parameters:
              system-image:
                - system-images;android-30;google_apis;x86
                - system-images;android-29;google_apis;x86
                - system-images;android-28;google_apis;x86
                - system-images;android-27;google_apis;x86
                - system-images;android-26;google_apis;x86
                - system-images;android-25;google_apis;x86
                - system-images;android-24;google_apis;x86
                - system-images;android-23;google_apis;x86
          name: android-test-<<matrix.system-image>>
          filters:
            branches:
              only: main # Commits to main branch
      - release-build:
          requires:
            - unit-test
            - android-test-all
          filters:
            branches:
              only: main, dev # Commits to main branch